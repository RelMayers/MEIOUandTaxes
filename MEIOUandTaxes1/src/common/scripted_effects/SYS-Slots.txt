#New System by Corlis

SlotsSpecialIndustries = {
	## Agriculture Special Industries
	if = {
		limit = { # Dyes
			Prod_Can_12 = yes
			Prod_NotHasProd = { Prod = 12 }
		}
		Public_AddProduce = { prod = 12 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	else_if = {
		limit = { # Exotics/CashCrop
			Prod_Can_19 = yes
			Prod_NotHasProd = { Prod = 19 }
			OR = {
				region = carribeans_region
				has_province_flag = tea
				has_province_flag = wildtea
				has_province_flag = coca
				has_province_flag = coffee
				has_province_flag = beer
				has_province_flag = honey
				has_province_flag = olive
				has_province_flag = wine
				has_province_flag = fruits
				has_province_flag = incense
				has_province_flag = sugar
				has_province_flag = cacao
				has_province_flag = dates
				has_province_flag = ginseng
				has_province_flag = kola
			}
		}
		Public_AddProduce = { prod = 19 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	else_if = {
		limit = { # Spices
			Prod_Can_20 = yes
			Prod_NotHasProd = { Prod = 20 }
		}
		Public_AddProduce = { prod = 20 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	else_if = {
		limit = { # Sericulture
			Prod_Can_42 = yes
			Prod_NotHasProd = { Prod = 42 }
		}
		Public_AddProduce = { prod = 42 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	## Fishery Special Industries
	if = {
		limit = { # Pearls
			Prod_Can_6 = yes
			Prod_NotHasProd = { Prod = 6 }
			OR = {
				has_province_flag = pearls_large
				has_province_flag = pearls_medium
				has_province_flag = pearls
			}
		}
		Public_AddProduce = { prod = 6 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Fishery Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	## Forestry Special Industries
	if = {
		limit = { # Ivory/Fur
			Prod_Can_21 = yes
			Prod_NotHasProd = { Prod = 21 }
			OR = {
				has_province_flag = Prod_Fur
				has_province_flag = westafrican_ivory
				has_province_flag = asian_ivory
				has_province_flag = ivory
			}
		}
		Public_AddProduce = { prod = 21 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Forestry Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	## Extraction Special Industries
	if = {
		limit = { # Gold
			Prod_Can_17 = yes
			Prod_NotHasProd = { Prod = 17 }
		}
		Public_AddProduce = { prod = 17 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Extraction Amount=5 Cap=yes Broker1=BU Broker2=SF }
	}
	else_if = {
		limit = { # Silver
			Prod_Can_18 = yes
			Prod_NotHasProd = { Prod = 18 }
		}
		Public_AddProduce = { prod = 18 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Extraction Amount=5 Cap=yes Broker1=BU Broker2=SF }
	}
	else_if = {
		limit = { # Precious Metal
			Prod_Can_16 = yes
			Prod_NotHasProd = { Prod = 16 }
		}
		Public_AddProduce = { prod = 16 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Extraction Amount=5 Cap=yes Broker1=BU Broker2=SF }
	} 		
	else_if = {
		limit = { # Marble
			Prod_Can_41 = yes
			Prod_NotHasProd = { Prod = 41 }
		}
		Public_AddProduce = { prod = 41 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Extraction Amount=5 Cap=yes Broker1=BU Broker2=SF }
	}
	else_if = {
		limit = { # Coal
			Prod_Can_14 = yes
			Prod_NotHasProd = { Prod = 14 }
		}
		Public_AddProduce = { prod = 14 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Extraction Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	else_if = {
		limit = { # Metal
			Prod_Can_15 = yes
			Prod_NotHasProd = { Prod = 15 }
		}
		Public_AddProduce = { prod = 15 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Extraction Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	else_if = {
		limit = { # Stone
			Prod_Can_23 = yes
			Prod_NotHasProd = { Prod = 23 }
		}
		Public_AddProduce = { prod = 23 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Extraction Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
}

SlotsBaseRuralIndustries = {
	## Agriculture Industries
	if = {
		limit = { # Crop
			Prod_Can_1 = yes
			Prod_NotHasProd = { Prod = 1 }
		}
		Public_AddProduce = { prod = 1 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	else_if = {
		limit = { # If Crop isnt possible 
			Prod_Can_7 = yes
			Prod_NotHasProd = { Prod = 7 }
		}
		Public_AddProduce = { prod = 7 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	## Fishery Industries
	if = {
		limit = { # Fishery
			Prod_Can_6 = yes
			Prod_NotHasProd = { Prod = 6 }
		}
		Public_AddProduce = { prod = 6 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}	
	## Forestry Industries
	if = {
		limit = { # Forestry
			Prod_Can_13 = yes
			Prod_NotHasProd = { Prod = 13 }
		}
		Public_AddProduce = { prod = 13 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}
	if = {
		limit = { # Game
			Prod_Can_21 = yes
			Prod_NotHasProd = { Prod = 21 }
			check_key = { lhs = Building_ForestryMax value = 100 }
		}
		Public_AddProduce = { prod = 21 size = 5 soph = 100 wealth = 0 }
		Infra_AddPrp = { Type=Agriculture Amount=5 Cap=yes Broker1=NO Broker2=SF }
	}	
}

SlotsSystem = {
    # Open slots loop - score best province for opening slot
    tradenode_centers = {
        if = {
            limit = {
                isValidProv = yes
                development = 3
                owner = { ai = yes }
                OR = {
                   NOT = { has_province_flag = Prod_S0 }
                   NOT = { has_province_flag = Prod_S1 }
                   NOT = { has_province_flag = Prod_S2 }
                   NOT = { has_province_flag = Prod_S3 }
                   NOT = { has_province_flag = Prod_S4 }
                   NOT = { has_province_flag = Prod_S5 }
                   NOT = { has_province_flag = Prod_S6 }
                   NOT = { has_province_flag = Prod_S7 }
                   NOT = { has_province_flag = Prod_S8 }
                   NOT = { has_province_flag = Prod_S9 }
                   NOT = { has_province_flag = Prod_S10 }
                   NOT = { has_province_flag = Prod_S11 }
                   NOT = { has_province_flag = Prod_S12 }
                   NOT = { has_province_flag = Prod_S13 }
                   NOT = { has_province_flag = Prod_S14 }
                   NOT = { has_province_flag = Prod_S15 }
                }
            }
            #set_province_flag = open_candidate
        }
        every_trade_node_member_province = {
            limit = {
                isValidProv = yes
                development = 3
                owner = { ai = yes }
				NOT = { has_province_flag = rec_new_slot }
                OR = {
                   NOT = { has_province_flag = Prod_S0 }
                   NOT = { has_province_flag = Prod_S1 }
                   NOT = { has_province_flag = Prod_S2 }
                   NOT = { has_province_flag = Prod_S3 }
                   NOT = { has_province_flag = Prod_S4 }
                   NOT = { has_province_flag = Prod_S5 }
                   NOT = { has_province_flag = Prod_S6 }
                   NOT = { has_province_flag = Prod_S7 }
                   NOT = { has_province_flag = Prod_S8 }
                   NOT = { has_province_flag = Prod_S9 }
                   NOT = { has_province_flag = Prod_S10 }
                   NOT = { has_province_flag = Prod_S11 }
                   NOT = { has_province_flag = Prod_S12 }
                   NOT = { has_province_flag = Prod_S13 }
                   NOT = { has_province_flag = Prod_S14 }
                   NOT = { has_province_flag = Prod_S15 }
                }
            }
            #set_province_flag = open_candidate		
        }
    }
    
    # Find highest valued prov per node and try to open a slot.
	# It will attempt to evaluate 3 province and then block them for 50 years with the flag
    tradenode_centers = {
        if = {
            limit = {
                has_province_flag = open_candidate
            }
			# Make the diff between available and used resources
            set_key = { lhs = Tmp_5 which = Building_AgricultureMax }
            subtract_key = { lhs = Tmp_5 which = Building_Agriculture }
            change_key = { lhs = Tmp_5 which = Building_FisheryMax }
            subtract_key = { lhs = Tmp_5 which = Building_Fishery }
            change_key = { lhs = Tmp_5 which = Building_ForestryMax }
            subtract_key = { lhs = Tmp_5 which = Building_Forestry }
			# 
			change_key = { lhs = Tmp_5 which = SF_Total }

            save_event_target_as = slots_opening_province_event_target
        }
        else = { set_key = { lhs = Tmp_5 value = 0 } }
        
        set_key = { lhs = Plague_Tmp0 value = 0 }
		while = {
            limit = {
                NOT = { 
                    check_key = { lhs = Plague_Tmp0 value = 3 } # attempts 
                }
            }
            if = {
                limit = {
                    has_province_flag = open_candidate
                }
                save_event_target_as = slots_opening_province_event_target
            }
            change_key = { lhs = Plague_Tmp0 value = 1 } # attempts
            set_key = { lhs = Tmp_0 value = 0 }            
            
            every_trade_node_member_province = {
                limit = {
                    has_province_flag = open_candidate
                }
				
				# Make the diff between available and used resources
				set_key = { lhs = Tmp_1 which = Building_AgricultureMax }
				subtract_key = { lhs = Tmp_1 which = Building_Agriculture }
				change_key = { lhs = Tmp_1 which = Building_FisheryMax }
				subtract_key = { lhs = Tmp_1 which = Building_Fishery }
				change_key = { lhs = Tmp_1 which = Building_ForestryMax }
				subtract_key = { lhs = Tmp_1 which = Building_Forestry }
				# 
				change_key = { lhs = Tmp_1 which = SF_Total }
                
                PREV = {
                    set_key = { lhs = Tmp_1 which = PREV }
                    if = {
                        limit = {
                            check_key = { lhs = Tmp_1 which = Tmp_0 }
                            check_key = { lhs = Tmp_1 which = Tmp_5 }
                        }
                        PREV = { save_event_target_as = slots_opening_province_event_target }
                        set_key = { lhs = Tmp_0 which = Tmp_1 } # save score for next check
                    }
                }
            }
            event_target:slots_opening_province_event_target = {
                if = {
                    limit = { 
                        has_province_flag = open_candidate
                    }
					log = "[This.GetName] Slots opening target [This.GV_Tmp_1]"
                    SlotsOpeningMain = yes
					set_province_flag = rec_new_slot
                }
                clr_province_flag = open_candidate
            }
        }
        every_trade_node_member_province = {
            clr_province_flag = open_candidate
        }
        clr_province_flag = open_candidate
    }
}
SlotsOpeningMain = {
    SlotsBaseRuralIndustries = yes
	SlotsSpecialIndustries = yes
}
OpenSlotsUrbanDiff = {
    if = {
        limit = {
            NOT = { has_province_flag = TN_SectorCent }
        }
        random_trade_node_member_province = {
            limit = {
                has_province_flag = TN_SectorCent
                owned_by = ROOT
            }
            event_target:upgrade_province_event_target = {
                set_key = { lhs = TN_SectorSply21 which = PREV }
                set_key = { lhs = TN_SectorSply22 which = PREV }
                set_key = { lhs = TN_SectorSply23 which = PREV }
                set_key = { lhs = TN_SectorSply24 which = PREV }
                set_key = { lhs = TN_SectorSply25 which = PREV }
                
                set_key = { lhs = TN_SectorDmnd21 which = PREV }
                set_key = { lhs = TN_SectorDmnd22 which = PREV }
                set_key = { lhs = TN_SectorDmnd23 which = PREV }
                set_key = { lhs = TN_SectorDmnd24 which = PREV }
                set_key = { lhs = TN_SectorDmnd25 which = PREV }
            }
        }
    }

    set_key = { lhs = Public_Tmp1 value = 0 }
    set_key = { lhs = Public_Tmp2 value = 0 }
    set_key = { lhs = Public_Tmp3 value = 0 }
    set_key = { lhs = Public_Tmp4 value = 0 }
	set_key = { lhs = Public_Tmp5 value = 0 }
	set_key = { lhs = Public_Tmp6 value = 0 }
    
	#Calculates Diffs positive or negative for Urban Goods
  
# Consumer
	if = {
		limit = {
			check_key = { lhs = TN_SectorSply21 value = 0.001 }
			check_key = { lhs = TN_SectorDmnd21 value = 0.001 }
		}
		set_key = { lhs = Public_Tmp1 which = TN_SectorDmnd21 } # Demand = 10
		divide_key = { lhs = Public_Tmp1 which = TN_SectorSply21 } # 10 / 15 = 0.66
	}
	else = {
		set_key = { lhs = Public_Tmp1 which = TN_SectorDmnd21 }
		change_key = { lhs = Public_Tmp1 value = 1 }
	}
# Military
	if = {
		limit = {
			check_key = { lhs = TN_SectorSply22 value = 0.001 }
			check_key = { lhs = TN_SectorDmnd22 value = 0.001 }
		}
        set_key = { lhs = Public_Tmp2 which = TN_SectorDmnd22 }
        divide_key = { lhs = Public_Tmp2 which = TN_SectorSply22 }
	}
	else = {
		set_key = { lhs = Public_Tmp2 which = TN_SectorDmnd22 }
		change_key = { lhs = Public_Tmp2 value = 1 }
	}
 # Naval
 	if = {
		limit = {
			check_key = { lhs = TN_SectorSply23 value = 0.001 }
			check_key = { lhs = TN_SectorDmnd23 value = 0.001 }
		}
        set_key = { lhs = Public_Tmp3 which = TN_SectorDmnd23 }
        divide_key = { lhs = Public_Tmp3 which = TN_SectorSply23 }
	}
	else = {
		set_key = { lhs = Public_Tmp3 which = TN_SectorDmnd23 }
		change_key = { lhs = Public_Tmp3 value = 1 }
	}
# Industrial
	if = {
		limit = {
			check_key = { lhs = TN_SectorSply24 value = 0.001 }
			check_key = { lhs = TN_SectorDmnd24 value = 0.001 }
		}
        set_key = { lhs = Public_Tmp4 which = TN_SectorDmnd24 }
        divide_key = { lhs = Public_Tmp4 which = TN_SectorSply24 }
	}
	else = {
		set_key = { lhs = Public_Tmp4 which = TN_SectorDmnd24 }
		change_key = { lhs = Public_Tmp4 value = 1 }
	}
# Luxury
	if = {
		limit = {
			check_key = { lhs = TN_SectorSply25 value = 0.001 }
			check_key = { lhs = TN_SectorDmnd25 value = 0.001 }
		}
        set_key = { lhs = Public_Tmp5 which = TN_SectorDmnd25 }
        divide_key = { lhs = Public_Tmp5 which = TN_SectorSply25 }
	}
	else = {
		set_key = { lhs = Public_Tmp5 which = TN_SectorDmnd25 }
		change_key = { lhs = Public_Tmp5 value = 1 }
	}
# PriceDiff Fiber Raw
	if = {
		limit = {
			check_key = { lhs = TN_ProvPrc4 value = 0.001 }
			check_key = { lhs = TN_ProvPrc6 value = 0.001 }
		}
        set_key = { lhs = Public_Tmp6 which = TN_ProvPrc6 }
        divide_key = { lhs = Public_Tmp6 which = TN_ProvPrc4 }
	}
	else = {
		set_key = { lhs = Public_Tmp5 value = 1 }
	}
}

SlotsCitySystem = {
	## Flag all provinces which shouldnt get a city anymore
	every_country = {
		limit = {
			isValidCountry = yes
		}
		every_owned_province = {
			limit = {
				isValidProv = yes
				has_province_flag = City_Present
				NOT = { has_province_flag = AI_NoCity }
			}
			set_province_flag = AI_NoCity
			area = {
				log = "[This.GetName] No city here"
				set_province_flag = AI_NoCity
			}
		}
		## Find potential city 
		random_owned_province = {
			limit = {
				isValidProv = yes
				NOT = { has_province_flag = AI_NoCity }
				NOT = { has_province_flag = City_Present }
				NOT = { check_key = { lhs = Prov_TRPow value = 75 } }
			}
			log = "[This.GetName] We have an prov and matching area with no city"
			owner = {
				country_event = {
					id = slots.2
					days = 3
				}
			}
		}
	}
}